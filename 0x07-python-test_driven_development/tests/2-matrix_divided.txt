``2-matrix_divided`` module
===========================

Using ``matrix_divided``
------------------------

This is an example text file in reStructuredText format
First import ``matrix_divided`` from ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6],
... ]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
    ...
TypeError: 'NoneType' object is not iterable

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> mtrix = [
...     [1, 2, 3],
...     [4, 5, 6],
...     [7, 8, 9, 3]
... ]

>>> print(matrix_divided(mtrix, 4))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrx = [
...     [1, 2, "b"],
...     [3, 4, 5]
... ]

>>> print(matrix_divided(matrx, 4))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
